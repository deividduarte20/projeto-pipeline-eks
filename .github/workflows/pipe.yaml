name: Build and Push to ECR

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      run: |
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 825223353827.dkr.ecr.us-east-1.amazonaws.com

    - name: Build and Push Docker Image
      run: |
        cd application
        docker build -t 825223353827.dkr.ecr.us-east-1.amazonaws.com/new-comments:v1 .
        docker push 825223353827.dkr.ecr.us-east-1.amazonaws.com/new-comments:v1

  deploy:
    runs-on: ubuntu-latest

    needs: build-and-push

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Run Terraform
      run: |
        cd terraform-eks
        terraform init
        terraform apply -auto-approve

    - name: Deploy to EKS
      run: |
        kubectl create namespace app
        kubectl apply -f manifests/deployment.yaml
        kubectl apply -f manifests/service.yaml
        kubectl apply -f manifests/hpa.yaml

    - name: Install Helm
      run: |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
        chmod +x get_helm.sh
        ./get_helm.sh

    - name: Deploy Helm Chart
      run: |
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

        helm install prometheus prometheus-community/prometheus-stack --namespace monitoramento --create-namespace